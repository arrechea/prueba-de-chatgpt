<?php
/**
 * Created by IntelliJ IDEA.
 * User: MEISA
 * Date: 26/11/2018
 * Time: 11:54 AM
 */

namespace App\Librerias\Catalog\Tables\Company;


use App\Librerias\Catalog\LibCatalogoModel;
use App\Librerias\Catalog\LibValoresCatalogo;
use App\Librerias\Helpers\LibFilters;
use App\Librerias\Vistas\VistasGafaFit;
use App\Models\Catalogs\CatalogsGroupsRelations;
use App\Models\Company\Company;
use Illuminate\Database\Eloquent\SoftDeletes;
use Illuminate\Http\Request;

class CatalogGroupsCatalogs extends LibCatalogoModel
{
    use CatalogsGroupsRelations;
    protected  $table = 'catalogs_groups';

    public function GetName()
    {
        return 'CatalogsGroups';
    }

    static protected function filtrarQueries(&$query)
    {
     //   parent::filtrarQueries($query); // TODO: Change the autogenerated stub
    }

    public function link(): string
    {
        return route('admin.company.special-text.catalogs-groups.index');

    }

    public function GetHtmlExtraEnHeaderIndex()
    {
        return VistasGafaFit::view('admin.company.special-texts.info');
    }

    static protected function ColumnToSearch()
    {
        $companies_id = LibFilters::getFilterValue('comp_id', \request());

        return function ($query, $criterio) use ($companies_id) {
            $query->where(function ($q) use ($criterio) {
              $q->where('name', 'like', "%{$criterio}%");
              $q->where('slug', 'like', "%{$criterio}%");
            });
            $query->where('companies_id', $companies_id);
        };

    }

    public function Valores(Request $request = null)
    {
     $groupCatalog =$this;
     $request = \request();
        $comp_id = $request->get('companies_id');
        $company = null;

        if (\request()->has('companies_id')) {
            $companies_id = \request()->get('companies_id');
            $company = Company::find($companies_id);
        }

     $buttons = new LibValoresCatalogo($this,__('special-texts-form.actions'),'',[
         'validator' => '',
         'notOrdenable' => true
     ]);
     $buttons->setGetValueNameFilter(function($lib) use ($company, $groupCatalog){
         return VistasGafaFit::view('admin.company.special-texts.catalog-groups.buttons',[
             'groupCatalog' => $groupCatalog,
         ])->render();
     });

     return[
         (new LibValoresCatalogo($this, __('special-texts-form.name'), 'name',[
             'validator' => '',
         ])),
         (new LibValoresCatalogo($this, 'Slug', 'slug',[
             'validator' => '',
         ])),
//         (new LibValoresCatalogo($this, __('special-texts-form.type'), '',[
//             'validator' => '',
//         ])),
         (new LibValoresCatalogo($this,__('special-texts-form.order'),'order',[
             'validator' => 'number'
         ])),
         (new LibValoresCatalogo($this, __('special-texts-form.Active'), '', [
             'validator' => '',
         ]))->setGetValueNameFilter(function ($lib, $value) use ($groupCatalog) {
             return VistasGafaFit::view('admin.common.check', [
                 'active' => $groupCatalog->isActive(),
             ])->render();
         }),

        $buttons
     ];
    }


}
